<div class="row">
    <label for="@("template_" + Id)" class="form-label">@TemplateName</label>
    <InputTextArea id="@("template_" + Id)"
                   class="@("form-control form-control-sm mb-1 " + (IsValid ? "is-valid" : "is-invalid"))"
                   @bind-Value="TemplateText"
                   @bind-Value:after="() => TemplateTextChanged.InvokeAsync(TemplateText)"/>
</div>
<div class="row justify-content-end pb-4">
    <div class="col-12 col-sm-4 col-md-2 p-0 px-1">
        <button class="btn btn-primary" disabled="@(!IsValid)" style="width: 100%;"
                @onclick="() => SaveTemplate.InvokeAsync()">Save
        </button>
    </div>
    <div class="col-12 col-sm-4 col-md-2 p-0">
        <button class="btn btn-danger" style="width: 100%;"
                @onclick="() => DeleteTemplate.InvokeAsync()">Delete
        </button>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [Parameter]
    public string TemplateName { get; set; } = "";

    [Parameter]
    public string TemplateText { get; set; } = "";

    [Parameter]
    public EventCallback<string> TemplateTextChanged { get; set; }

    [Parameter]
    public EventCallback DeleteTemplate { get; set; }

    [Parameter]
    public EventCallback SaveTemplate { get; set; }

    public bool IsValid => !string.IsNullOrEmpty(TemplateText);

}